{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/answer/answer.component.html","webpack:///./src/app/answer/answer.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.service.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<div>\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <p>{{quesUserName | uppercase}}</p>\n      <div class=\"panel panel-default text-left\">\n        <div class=\"panel-body\">\n          <p>{{ques}}</p>\n          \n\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    \n    <div class=\"col-sm-12 panel-body\" style=\"background-color: lightyellow;\">\n      <form [formGroup] = \"answerForm\" (ngSubmit)=\"onSubmit()\" style=\"text-align: left;\">\n        <mat-form-field style=\"width: 100%;\">\n            <textarea formControlName=\"answerTxt\" style=\"resize: none\" maxlength=\"150\" rows=\"4\" cols=\"150\" matInput placeholder=\"Yah! I know about this..\"></textarea>\n            <mat-hint align=\"start\"><strong>Just post your answer</strong> </mat-hint>\n            <mat-error >\n              Asnswer <strong>here</strong>\n            </mat-error>\n          </mat-form-field>\n          <button class=\"btn btn-primary\" style=\"float: right\" [disabled]=\"!answerForm.valid\" type=\"submit\">Submit</button>\n          <button type=\"reset\" (click)=\"onWipe\" style=\"float: right; margin-right: 1em;\" class=\"btn\">Wipe All</button>\n        </form>\n    </div>\n\n  </div>\n  <hr style=\"border-color: gainsboro;\">\n  <div >\n  <div class=\"row\" *ngFor=\"let a of answerData\"  style=\"padding: 15px 0px 15px 0px;\">\n      <div class=\"col-sm-2 userBorder\">\n          <span>\n            <p>{{a.userName}}</p>\n            <i class=\"fa fa-user fa-4x\" aria-hidden=\"true\"></i>\n            <p>{{a.createdTime | date:'d/M/y'}}</p>\n          </span>\n        </div>\n        <div class=\"col-sm-9 ansBorder\" >\n          <p>{{a.ans}}</p>\n        </div>\n      </div>\n  </div>\n  <ng-template #noAnswer>\n    *******No anwers yet*******\n  </ng-template>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HomeService } from '../home/home.component.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material';\nimport { SignupComponent } from '../auth/signup/signup.component';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.component.html',\n  styleUrls: ['./answer.component.css']\n})\nexport class AnswerComponent implements OnInit {\n  questionData :any;\n  ques: string;\n  quesUserName: string;\n  answerForm : FormGroup;\n  answerData: any[];\n  quesId: string;\n\n  constructor(private homeservice: HomeService, private router: Router, private route: ActivatedRoute,\n    private dialog:MatDialog, private dialogRef1: MatDialogRef<SignupComponent>,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n\n    this.answerForm = new FormGroup({\n      'answerTxt' : new FormControl(null, Validators.required)\n    })\n    this.quesId = this.route.snapshot.params['id'];\n    this.LoadAnswers();    \n    this.LoadQuestions();  \n    // this.questionData = this.homeservice.getData();\n    // this.ques = this.questionData.ques;\n    // this.quesUserName = this.questionData.name;\n    \n  }\n\n  onSubmit(){\n    //console.log('anspost',this.answerForm.value.answerTxt);\n    var data = {\n      \"answerTxt\" : this.answerForm.value.answerTxt,\n      \"quesID\" : this.questionData.id\n    }\n    this.homeservice.saveAnswer(data);\n    //this.router.navigate(['answer',this.quesId]);\n    window.location.reload();\n    \n  }\n\n  onWipe(){\n    this.answerForm.reset();\n  }\n\n  LoadAnswers(){\n    this.spinner.show();\n    this.homeservice.getAnswer(this.quesId).subscribe(\n      (data:any[]) =>\n      {\n        this.answerData = data;\n        console.log(this.answerData);\n        this.spinner.hide();\n        \n      }, err =>{\n        console.log(err.statusText);\n        if(err.statusText == 'Unauthorized'){\n          this.router.navigate(['/']);\n          this.openSignUp();\n          \n        }\n      }\n    )\n  }\n\n  LoadQuestions(){\n    this.spinner.show();\n    this.homeservice.getQues(this.quesId).subscribe(\n      (data:any[]) =>\n      {\n        this.questionData = data;\n        console.log('qwert',this.questionData);\n        this.ques = this.questionData.ques;\n        this.quesUserName = this.questionData.name;\n        this.spinner.hide();\n      }, err => {\n        console.log(err);\n      }\n    )\n  }\n\n  openSignUp(){\n    const dialogConfig = new MatDialogConfig();\n    \n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    this.dialogRef1 = this.dialog.open(SignupComponent, dialogConfig);\n    \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { TestComponent } from './test/test.component';\nimport { AuthGuard } from './auth-guards.services';\nimport { AnswerComponent } from './answer/answer.component';\n\nconst routes: Routes = [\n  {path: '', component:HomeComponent, pathMatch:'full'},\n  {path: 'answer/:id', component:AnswerComponent},\n  {path: 'test', component:TestComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<ngx-spinner\r\n    bdColor=\"rgba(51,51,51,0.8)\"\r\n    size=\"medium\"\r\n    color=\"#fff\"\r\n    type=\"ball-clip-rotate-pulse\">\r\n   <p style=\"font-size: 20px; color: rgb(231, 181, 41)\">Loading...</p>\r\n</ngx-spinner>\r\n    <nav class=\"navbar navbar-fixed-top\">\r\n        <div class=\"container-fluid bgReview\">\r\n            \r\n          <div class=\"navbar-header\">          \r\n              <img class=\"imgreview img-fluid\" src=\"../assets/vrrag.png\">\r\n            <!-- <a class=\"navbar-brand\" style=\"font-family:'Comic Sans MS'; color: #ffffff;\">Review Master</a> -->\r\n          </div>\r\n         \r\n          <ul class=\"nav navbar-nav\">\r\n            <li class=\"active fonts\"><a href=\"#\" style=\"color: #ffffff;\">Home</a></li>\r\n            <li><a href=\"#\" style=\"color: #ffffff;\">Answer</a></li>\r\n            <li><a href=\"#\" style=\"color: #ffffff;\">Poll</a></li>\r\n          </ul>\r\n          <span *ngIf=\"!IsUserExists\">\r\n            <button class=\"btn btn-success navbar-btn navbar-nav signup\" (click)=\"openSignUp()\" ><i class=\"fa fa-user-times\" style=\"padding-right: 5px;\" aria-hidden=\"true\"></i>Sign up free</button>\r\n            <button class=\"btn btn-default navbar-btn navbar-nav signup\" style=\"background-color: #474e5d; color:white; border: none;\" \r\n            (click)=\"openSignIn()\"><i class=\"fa fa-user-circle-o\" style=\"padding-right: 5px;\" aria-hidden=\"true\"></i>Log in</button>\r\n            \r\n          </span> \r\n          <span *ngIf=\"IsUserExists\">            \r\n            <button class=\"btn btn-danger logoutbtn\" type=\"submit\" (click)=\"onLogoutClick()\">Logout</button>\r\n            <label class=\"userName\">{{UserName | uppercase}}</label>\r\n          </span>        \r\n        </div>\r\n      </nav>\r\n      <br>\r\n      \r\n      <div class=\"container-fluid text-center\"> \r\n          <div class=\"row content\">\r\n    <div class=\"col-sm-2 col-md-2 sidenav\" style=\"margin-top:50px; text-align:left\">      \r\n        <div class=\"well vertical-menu\">\r\n            <a (click)=\"menuClick('Science')\" class=\"menu\"><i class=\"fa fa-flask\" aria-hidden=\"true\"></i>  Science</a>\r\n            <a (click)=\"menuClick('Media')\" class=\"menu\"><i class=\"fa fa-film\" aria-hidden=\"true\"></i>  Media</a>\r\n            <a (click)=\"menuClick('Sports')\" class=\"menu\"><i class=\"fa fa-trophy\" aria-hidden=\"true\"></i>  Sports</a>\r\n            <a (click)=\"menuClick('Others')\" class=\"menu\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>  Others</a>\r\n        </div>\r\n      \r\n    </div>\r\n    \r\n    <div class='col-sm-9 col-md-9' style=\"margin-top:50px\">\r\n        <div class=\"well well-lg panel-body\">\r\n      <form [formGroup] = \"askQuesForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n        <div class=\"col-sm-10 col-md-10\">\r\n          <mat-form-field class=\"example-full-width\">\r\n            <textarea formControlName=\"quesText\" style=\"resize: none\" maxlength=\"150\" rows=\"4\" cols=\"150\" matInput placeholder=\"Ask a question\"></textarea>\r\n            <mat-hint align=\"start\"><strong>Make your question simple and crisp</strong> </mat-hint>\r\n            <mat-error *ngIf=\"askQuesForm.get('quesText').touched\">\r\n              Ask something <strong>here</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>    \r\n        <div class=\"col-sm-2 col-md-2\">\r\n          <button class=\"btn btn-primary\" style=\"float: left;\" type=\"submit\"[disabled]=\"!askQuesForm.valid\" >Ask</button>\r\n          <!-- <button class=\"btn btn-default\" style=\"margin-top: 1em;\" type=\"reset\" (clcik)=\"onClear\">Clear</button> -->\r\n          <div>\r\n          <mat-form-field style=\"width: 9em; margin: 8px 0px;\">\r\n              <mat-label>Category</mat-label>\r\n              <mat-select formControlName=\"categoryDropdown\" >\r\n                <mat-option>--</mat-option>\r\n                <mat-option *ngFor=\"let c of category\" [value]=\"c\">\r\n                  {{c.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"askQuesForm.get('categoryDropdown').touched\">Please choose a Category</mat-error>              \r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      </form>\r\n    </div> \r\n\r\n    <div class='well well-lg panel-body'>\r\n        <router-outlet ></router-outlet>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"col-sm-1 col-md-1 sidenav\" style=\"margin-top:50px\">      \r\n      <div class=\"well well-lg\" style=\"height: 90em;\">\r\n        Poll Section\r\n      </div>\r\n     \r\n   </div>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n  </div>\r\n  <footer class=\"container-fluid text-center\">\r\n      <p>Copyright 2018-2019 by XXXXXXX. All Rights Reserved.</p>\r\n    </footer>\r\n  </div>","import { Component, OnInit } from '@angular/core';\nimport  {MatDialog, MatDialogConfig, MatDialogRef} from '@angular/material/dialog';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { HomeService } from './home/home.component.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\n\n\nexport interface Category {\n  name: string;\n  value: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\naskQuesForm: FormGroup;\nIsUserExists : boolean = false;\nUserName : string;\n\n\ncategory : Category[] = [\n  {name: 'Science', value: 'Science'},\n  {name: 'Media', value: 'Media'},\n  {name: 'Sports', value: 'Sports'},\n  {name: 'Others', value: 'Others'}\n]\n  apiType: string;\n\nconstructor(private dialog:MatDialog, private dialogRef: MatDialogRef<SigninComponent>, private dialogRef1: MatDialogRef<SignupComponent>,private http: HttpClient,\n  private router:Router, private homeService: HomeService, private toastr: ToastrService) {\n}\n\nngOnInit(){\n\n  this.getUserName();\n\n  this.askQuesForm = new FormGroup({\n    'quesText': new FormControl(null, Validators.required),\n    'categoryDropdown': new FormControl(null, Validators.required)\n  });\n}\n\ngetUserName(){\n  let token = localStorage.getItem('jwt');\n  if(token != null)\n  {\n    let jwtData = token.split('.')[1];\n    let decodedJwtJsonData = window.atob(jwtData) ;\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\n    \n    this.IsUserExists = (decodedJwtData.UserName != null && decodedJwtData.UserName != '') ? true : false;\n    this.UserName =  this.IsUserExists ? decodedJwtData.UserName : '' ;\n    //console.log('userdata',(decodedJwtData.UserName != ''));\n  }\n  \n}\n\n  openSignUp(){\n    const dialogConfig = new MatDialogConfig();\n    \n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    this.dialogRef1 = this.dialog.open(SignupComponent, dialogConfig);\n    this.dialogRef1.afterClosed().subscribe(user => {\n      if(user != undefined && user != null)\n      {\n        this.IsUserExists = true;\n        this.UserName = user;\n      }      \n    },\n    err=> {\n      console.log(err);\n    });\n  }\n\n  openSignIn(){\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;    \n    this.dialogRef = this.dialog.open(SigninComponent, dialogConfig);\n    \n    this.dialogRef.afterClosed().subscribe(user => {\n      if(user != undefined && user != null)\n      {\n        this.IsUserExists = true;\n        this.UserName = user;\n      }      \n    },\n    err=> {\n      console.log(err);\n    });\n    \n  }\n\n  onSubmit(){\n  console.log(this.askQuesForm.value);\n  var question = {\n    \"ques\" : this.askQuesForm.value.quesText,\n    \"category\" : this.askQuesForm.value.categoryDropdown.name\n  }\n  let token = localStorage.getItem(\"jwt\");\n  \n  let questions = JSON.stringify(question);\n  this.apiType = 'question/PostQuestion';\n  const url = `${environment.serviceapi}/api/${this.apiType}/`;\n  this.http.post(url,questions, {\n    headers: new HttpHeaders({\n      \"Authorization\": \"Bearer \" + token,\n      \"Content-Type\": \"application/json\"\n    })\n  }).subscribe(res=>{\n\n  }, err=>{\n    console.log(err);\n  });\n  \n  this.router.navigate(['/']);\n  window.location.reload();\n  }\n\n  onLogoutClick(){\n    this.IsUserExists = false;\n    localStorage.removeItem(\"jwt\");\n    this.toastr.success('Logged out Successfully!');   \n  }\n\n  onClear(){\n    this.askQuesForm.reset();\n  }\n\n  menuClick(opt: string){\n    this.homeService.setOptions(opt);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatDialogModule, MatDialogRef, MatFormFieldModule, MatSelectModule} from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './test/test.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport {AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { AuthGuard } from './auth-guards.services';\nimport { HomeService } from './home/home.component.service';\nimport { AnswerComponent } from './answer/answer.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent,\n    HomeComponent,\n    SignupComponent,\n    SigninComponent,\n    AnswerComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFontAwesomeModule,\n    FormsModule,\n    MatDialogModule,    \n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    NgxSpinnerModule,\n    ToastrModule.forRoot()\n    \n  ], \n  \n  providers: [HomeService, { provide: MatDialogRef, useValue: {} }],\n  bootstrap: [AppComponent],\n  entryComponents: [SignupComponent, SigninComponent]\n})\nexport class AppModule { }\n","<span>\n  <h2 mat-dialog-title style=\"display:inline\">SIGN IN</h2>\n</span>\n<i class=\"fa fa-times-circle fa-lg\" style=\"margin-left: 7em; cursor: pointer;\" aria-hidden=\"true\" (click)=\"onClose()\"></i>\n<form [formGroup] = \"signInform\" (ngSubmit)=\"onSubmit()\">\n  \n  <div class=\"form-group\">\n    <!-- <label>User Name</label>\n    <input class=\"form-control\" type=\"text\" id=\"username\" name=\"usrname\" formControlName = \"username\" > -->\n    <mat-form-field appearance=\"outline\">\n      <mat-label>User Name</mat-label>\n      <input matInput type=\"text\" id=\"username\" name=\"usrname\" formControlName = \"username\" placeholder=\"Name\" >      \n      <!-- <mat-hint>Hint</mat-hint> -->\n    </mat-form-field>\n  </div>\n  <div class=\"form-group\">\n    <!-- <label>Password</label>\n    <input class=\"form-control\" type=\"password\" id=\"pswd\" name=\"pswd\" formControlName = \"password\" > -->\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input matInput type=\"password\" id=\"pswd\" name=\"pswd\" formControlName = \"password\" placeholder=\"Password\" >      \n      <!-- <mat-hint>Hint</mat-hint> -->\n    </mat-form-field>\n  </div>\n  <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"(!signInform.valid)\">Sign In</button>\n  <!-- <span *ngIf=\"signUpform.touched && !signUpform.valid\">Enter valid data!</span> -->\n</form>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  signInform : FormGroup;\n  invalidLogin: boolean;\n  apiType: any;\n  //@Output() usrnameEvent = new EventEmitter<string>();\n\n  constructor(private http : HttpClient, private router: Router, private dialog : MatDialogRef<SigninComponent>,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.signInform = new FormGroup({\n      'username': new FormControl(null,Validators.required),\n      'password': new FormControl(null,Validators.required)\n\n    });\n  }\n\n  onSubmit(){\n    \n    let credentials = JSON.stringify(this.signInform.value);\n    this.apiType = 'auth';\n    const url = `${environment.serviceapi}/api/${this.apiType}/`;\n    this.http.post(url, credentials,{\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    }).subscribe(res=>{   \n      this.toastr.success('We missed you..' ,'Welcome '+this.signInform.value.username);   \n      let token = (<any>res).token;\n      localStorage.setItem(\"jwt\", token);\n      this.invalidLogin = false;\n      this.router.navigate([\"/\"]);\n      this.dialog.close(this.signInform.value.username);\n      //this.usrnameEvent.emit(this.signInform.value.username);\n    },err =>{\n      console.log('sin',err);\n      if(err.statusText == 'Unauthorized')\n      {\n        this.toastr.error('Wrong Username','Oops..!' );\n      }\n    })\n\n  }\n\n  onClose(){\n    this.dialog.close();\n  }\n\n}\n","<div>\n  <span>\n    <h2 mat-dialog-title style=\"display:inline\">SIGN UP</h2>\n</span>\n<i class=\"fa fa-times-circle fa-lg\" style=\"margin-left: 7em; cursor: pointer;\" aria-hidden=\"true\" (click)=\"onClose()\"></i>\n\n\n\n<form [formGroup] = \"signUpform\" (ngSubmit)=\"onSubmit()\">\n  \n  <div class=\"form-group\">\n    <!-- <label>User Name</label>\n    <input class=\"form-control\" type=\"text\" id=\"username\" name=\"usrname\" formControlName = \"username\" >\n    <span *ngIf=\"signUpform.get('username').touched && !signUpform.get('username').valid\">Please enter valid Username!</span> -->\n    <mat-form-field appearance=\"outline\">\n      <mat-label>User Name</mat-label>\n      <input matInput type=\"text\" id=\"username\" name=\"usrname\" formControlName = \"username\" placeholder=\"Name\" >      \n      <!-- <mat-hint><span *ngIf=\"signUpform.get('username').touched && !signUpform.get('username').valid\">Please enter valid Username!</span></mat-hint> -->\n    </mat-form-field>\n  </div>\n  <div class=\"form-group\">\n    <!-- <label>Email</label>\n    <input class=\"form-control\" type=\"text\" id=\"email\" name=\"email\" formControlName = \"email\" >\n    <span *ngIf=\"signUpform.get('email').touched && !signUpform.get('email').valid\">Please enter valid email!</span> -->\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Email</mat-label>\n      <input matInput type=\"text\" id=\"email\" name=\"email\" formControlName = \"email\" placeholder=\"Email\" >      \n      <mat-hint><span *ngIf=\"signUpform.get('email').touched && !signUpform.get('email').valid\">Please enter valid email!</span></mat-hint>\n    </mat-form-field>\n  </div>\n  <div class=\"form-group\">\n    <!-- <label>Password</label>\n    <input class=\"form-control\" type=\"password\" id=\"pswd\" name=\"pswd\" formControlName = \"password\" >\n    <span *ngIf=\"signUpform.get('password').touched && !signUpform.get('password').valid\">Password required!</span> -->\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input matInput type=\"password\" id=\"pswd\" name=\"pswd\" formControlName = \"password\" placeholder=\"Password\" >      \n      <mat-hint><span *ngIf=\"signUpform.get('password').touched && !signUpform.get('password').valid\">Password required!</span></mat-hint>\n    </mat-form-field>\n  </div>\n  <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"(!signUpform.valid)\">Sign Up</button>\n  <!-- <span *ngIf=\"signUpform.touched && !signUpform.valid\">Enter valid data!</span> -->\n</form>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport {NgForm, FormGroup, FormControl, Validators} from '@angular/forms';\nimport {MatDialog, MatDialogRef} from '@angular/material';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\n\nexport interface signupi{\n  \n}\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\n\n\n\nexport class SignupComponent implements OnInit {\n  signUpform: FormGroup;\n  invalidLogin : boolean;  \n  apiType: string;\n  \n  constructor(public dialogRef: MatDialogRef<SignupComponent>, private http: HttpClient, private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.signUpform = new FormGroup({\n      'username': new FormControl(null, Validators.required),\n      'email': new FormControl(null, [Validators.email,Validators.required]),\n      'password': new FormControl(null, Validators.required)      \n\n    });\n    \n  }\n\n  onSubmit(){\n    //console.log(this.signUpform.value);\n    let credentials = JSON.stringify(this.signUpform.value);\n    this.apiType = 'auth/SignUp';\n    const url = `${environment.serviceapi}/api/${this.apiType}/`;\n    this.http.post(url, credentials,{\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    }).subscribe(res=>{\n      //console.log('spin',res);\n      let token = (<any>res).token;\n      localStorage.setItem(\"jwt\", token);\n      this.dialogRef.close(this.signUpform.value.username);\n      this.toastr.success('for signing in..' ,'Thankyou '+this.signUpform.value.username);   \n    })\n\n  }\n\n  onClose(){\n    this.dialogRef.close();\n  }\n  \n\n}\n","\n\n<div >\n  <ul style=\"text-align: left; padding: 0px\">\n    <li style=\"list-style-type: none\">\n      <div *ngFor=\"let q of data\" class=\"row well\" style=\"background-color:honeydew\">\n        <div class=\"col-sm-11\">\n          <span ><a style=\"cursor: pointer\" (click)=\"onQuesClick(q)\">{{q.ques}}</a></span>\n      </div>\n      <div class=\"col-sm-1\">\n          <div class=\"flip-card\">\n              <div class=\"flip-card-inner\">\n                <div class=\"flip-card-front\">\n                  <img src=\"../../assets/user.png\" alt=\"User\" style=\"widows: 50px;;height:50px;\">\n                 </div>\n                <div class=\"flip-card-back\">\n                  <p>{{q.name | uppercase}}</p>\n                  <p>{{q.createdTime | date:'d/M/y'}}</p>\n                </div>\n              </div>\n            </div>\n      </div>\n      </div>\n    </li>\n    \n  </ul>\n</div>\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { OnInit, Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HomeService implements OnInit{\r\n    token:any;\r\n    data:any;\r\n    apiType: string;\r\n    quesDetails : any;\r\n    public options = new Subject<string>();\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n    \r\n    ngOnInit(){\r\n       this.token = localStorage.getItem(\"jwt\");\r\n       console.log('frmquestoken',this.token);\r\n    }\r\n    getQuestions(token): Observable<any>{\r\n        this.apiType = 'question/GetQuestion';\r\n        const url = `${environment.serviceapi}/api/${this.apiType}/`;\r\n        // const httpHeaders= {headers: new HttpHeaders({\r\n        //             \"Authorization\": \"Bearer \" + token,\r\n        //             \"Content-Type\": \"application/json\"\r\n        //           })}\r\n        return this.http.get(url).pipe(map((response: Response) => {\r\n            return response;\r\n        }, function(error){\r\n            return error.json();\r\n        }\r\n        ))\r\n    }\r\n\r\n    getSelectedQues(opt): Observable<any>{\r\n        this.apiType = 'question/GetSelectedQuestion';\r\n        const url = `${environment.serviceapi}/api/${this.apiType}/`;\r\n        let params = new HttpParams().set('option',opt);\r\n        const options = { params: params };\r\n        return this.http.get(url, options).pipe(map((response: Response) => {\r\n            return response;\r\n        },function(err){\r\n            return err.json();\r\n        }));\r\n    }\r\n\r\n    // saveData(q){\r\n    //     this.quesDetails = q;        \r\n    // }\r\n\r\n    // getData(){\r\n    //     return this.quesDetails;\r\n    // }\r\n\r\n    saveAnswer(data) {\r\n        this.apiType = 'question/PostAnswer';\r\n        const url = `${environment.serviceapi}/api/${this.apiType}/`;\r\n        let answerData = JSON.stringify(data);\r\n        console.log('frmsave',answerData);\r\n        let token = localStorage.getItem(\"jwt\");\r\n        const httpHeaders= {headers: new HttpHeaders({\r\n                    \"Authorization\": \"Bearer \" + token,\r\n                    \"Content-Type\": \"application/json\"\r\n                  })}\r\n        this.http.post(url, answerData, httpHeaders).subscribe((response: Response)=>\r\n        {\r\n            console.log(response);\r\n        }, err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    getAnswer(quesID):Observable<any>{\r\n        this.apiType = 'question/GetAnswer';\r\n        const url = `${environment.serviceapi}/api/${this.apiType}/`;\r\n        let params = new HttpParams().set('quesID',quesID);\r\n        //console.log('inservice',url);\r\n        let token = localStorage.getItem(\"jwt\");\r\n        // const httpHeaders= {headers: new HttpHeaders({\r\n        //     \"Authorization\": \"Bearer \" + token,\r\n        //     \"Content-Type\": \"application/json\"\r\n        //   })}\r\n        const headers = new HttpHeaders({\r\n              \"Authorization\": \"Bearer \" + token,\r\n                 \"Content-Type\": \"application/json\"\r\n               });        \r\n        const options = { params: params, headers: headers };\r\n        return this.http.get(url, options).pipe(map((response:Response) =>  {\r\n            return response;\r\n        }, function(error){\r\n            return error.json();\r\n        }\r\n        ))\r\n    }\r\n\r\n    getQues(quesID):Observable<any>{\r\n        this.apiType = 'question/GetCurrentQues';\r\n        const url = `${environment.serviceapi}/api/${this.apiType}/`;\r\n        let params = new HttpParams().set('quesID',quesID);\r\n        let token = localStorage.getItem(\"jwt\");\r\n        const headers = new HttpHeaders({\r\n            \"Authorization\": \"Bearer \" + token,\r\n               \"Content-Type\": \"application/json\"\r\n             });        \r\n      const options = { params: params, headers: headers };\r\n      return this.http.get(url, options).pipe(map((response:Response) =>  {\r\n          return response;\r\n      }, function(error){\r\n          return error.json();\r\n      }\r\n      ))\r\n    }\r\n\r\n    setOptions(opt){\r\n        this.options.next(opt);\r\n    }\r\n\r\n}","import { Component, OnInit, Output, Input } from '@angular/core';\nimport { HomeService } from './home.component.service';\nimport { Router } from '@angular/router';\nimport { EventEmitter } from 'events';\nimport { Subscription } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  \n})\nexport class HomeComponent implements OnInit {\n  data: any[];\n  optionSelected : Subscription;\n    \n\n  constructor(private homeservice: HomeService, private router: Router, private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n    this.LoadData();\n    this.optionSelected = this.homeservice.options.subscribe(\n      (optSel) => {\n        this.LoadSelectedData(optSel);\n      }\n    )\n  }\n\n  ngDestroy(){\n    this.optionSelected.unsubscribe();\n  }\n\n  LoadData(){\n    this.spinner.show();\n    let token = localStorage.getItem(\"jwt\");\n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n  }, 5000);\n    this.homeservice.getQuestions(token).subscribe((data:any[]) => {\n      this.data = data;\n      this.spinner.hide();\n      //console.log('frmobse',this.data);      \n    })\n    //this.homeservice.getQuestions(token);   \n       \n  }\n\n  onQuesClick(quesDetails){\n    //this.homeservice.saveData(quesDetails);\n    this.router.navigate(['answer',quesDetails.id]);\n    \n  }\n\n  LoadSelectedData(opt){\n    this.spinner.show();\n    this.homeservice.getSelectedQues(opt).subscribe(\n      (data:any[]) => {\n        this.data = data;\n        this.spinner.hide();\n      }\n    )\n  }\n\n}\n","<p>\n  test works!\n</p>\n\n\n","import { Component, OnInit} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  customers: any;\n\n  constructor(private http: HttpClient) { }\n \n  ngOnInit() {\n    let token = localStorage.getItem(\"jwt\");\n    this.http.get(\"https://localhost:44373/api/values\", {\n      headers: new HttpHeaders({\n        \"Authorization\": \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      })\n    }).subscribe(response => {\n      this.customers = response;\n      console.log('finally',this.customers);\n    }, err => {\n      console.log(err)\n    });\n  }\n\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serviceapi: \"https://localhost:44373/\"\n  //serviceapi: \"https://dotnet-app-bala.cfapps.io/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}